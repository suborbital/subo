steps:
  - id: initialize-qemu
    name: gcr.io/cloud-builders/docker
    args:
      - run
      - '--privileged'
      - 'tonistiigi/binfmt'
      - '--install'
      - 'arm64'
  - id: create-builder
    name: gcr.io/cloud-builders/docker
    args:
      - buildx
      - create
      - '--name'
      - builder
  - id: select-builder
    name: gcr.io/cloud-builders/docker
    args:
      - buildx
      - use
      - builder
  - id: show-target-build-platforms
    name: gcr.io/cloud-builders/docker
    args:
      - buildx
      - inspect
      - '--bootstrap'
  - id: docker-login
    name: gcr.io/cloud-builders/docker
    entrypoint: bash
    secretEnv: ['DOCKERHUB_USERNAME', 'DOCKERHUB_TOKEN']
    args:
      - '-eEuo'
      - 'pipefail'
      - '-c'
      - |-
        echo $$DOCKERHUB_TOKEN | docker login -u $$DOCKERHUB_USERNAME --password-stdin
  - id: build-tinygo-base
    name: gcr.io/cloud-builders/docker
    entrypoint: bash
    args:
      - '-eEuo'
      - 'pipefail'
      - '-c'
      - |-
        tinygo_ver="$(cat builder/docker/tinygo/.tinygo-ver | tr -d '\n')"
        echo "docker buildx build --platform linux/amd64,linux/arm64 -f builder/docker/tinygo/Dockerfile.base -t suborbital/tinygo-base:$tinygo_ver $_TINYGO_BASE_ARGS ."
        docker buildx build --platform linux/amd64,linux/arm64 -f builder/docker/tinygo/Dockerfile.base -t suborbital/tinygo-base:$tinygo_ver $_TINYGO_BASE_ARGS .
availableSecrets:
   secretManager:
   - versionName: projects/826192005836/secrets/DOCKERHUB_TOKEN/versions/1
     env: 'DOCKERHUB_TOKEN'
   - versionName: projects/826192005836/secrets/DOCKERHUB_USERNAME/versions/1
     env: 'DOCKERHUB_USERNAME'
timeout: 86400s
options:
  env:
    - DOCKER_CLI_EXPERIMENTAL=enabled
  machineType: E2_HIGHCPU_8
substitutions:
  _TINYGO_BASE_ARGS: ''
